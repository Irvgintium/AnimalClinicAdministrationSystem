/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package maintenance.jpanels;

import com.toedter.calendar.JCalendar;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import login.connection_db;

/**
 *
 * @author irv
 */
public class services_frame extends javax.swing.JFrame {
Connection conn_db = null;
    ResultSet rs = null;
    PreparedStatement ps = null;
    
  String getServices;
  String cid;
  String day;
  String month;
  String year;
    /**
     * Creates new form services_frame
     */
    public services_frame() {
        initComponents();
        conn_db = connection_db.ConnectDB();
        
        //for centered frame////
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        //
        
        String timeStamp = new SimpleDateFormat("d MMM yyyy").format(Calendar.getInstance().getTime());
        date.setText(timeStamp.toUpperCase());
        
         try{
         String sql1 = "select * from services_classifications";
         ps = conn_db.prepareStatement(sql1);
         rs = ps.executeQuery();
         
         while(rs.next()) {
             String getService_Name = rs.getString("classification_name");
             services_cmb.addItem(getService_Name);
         }
     }
     catch (Exception e) {
         JOptionPane.showMessageDialog(null, e);}
         
         update.setEnabled(false);
         save.setEnabled(true);
    }
    
    public void getSrviceID(){
        try{
            String sql = "select * from services_data where name ='"+serv_name.getText()+"' and classification ='"+services_cmb.getSelectedItem().toString()+"'";
            ps = conn_db.prepareStatement(sql);
            rs = ps.executeQuery();
            
            while(rs.next()){
                String getID = rs.getString("service_id");
                cid = getID;
            }
        
    }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    }
    
}
    public void container(){
        services_cmb.getSelectedItem();
        serv_name.getText();
        price.getText();
    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        date = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        services_cmb = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        serv_name = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        stab = new javax.swing.JTable();
        message1 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        save = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Services");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Date");

        jLabel10.setText("Service Classification");

        services_cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                services_cmbActionPerformed(evt);
            }
        });

        jLabel6.setText("Php");

        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });
        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Price");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Service Name");

        serv_name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        serv_name.setForeground(new java.awt.Color(51, 102, 0));
        serv_name.setText("*Service Name");
        serv_name.setToolTipText("Service Name");
        serv_name.setBorder(javax.swing.BorderFactory.createTitledBorder("Service Name"));
        serv_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                serv_nameMouseClicked(evt);
            }
        });
        serv_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serv_nameActionPerformed(evt);
            }
        });
        serv_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                serv_nameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                serv_nameFocusLost(evt);
            }
        });

        stab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Service Classification", "Service Name", "Service Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stabMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(stab);

        message1.setText(" ");

        jToolBar1.setRollover(true);

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Clear Green Button.png"))); // NOI18N
        save.setText("Save");
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveMouseClicked(evt);
            }
        });
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jToolBar1.add(save);

        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Write Document.png"))); // NOI18N
        update.setText("Update");
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateMouseClicked(evt);
            }
        });
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jToolBar1.add(update);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Gear.png"))); // NOI18N
        jButton1.setText("Manage Classification");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(12, 12, 12)
                        .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel10)
                    .addComponent(services_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(serv_name, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(message1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(92, Short.MAX_VALUE))
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel10)
                        .addGap(9, 9, 9)
                        .addComponent(services_cmb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel9)
                        .addGap(9, 9, 9)
                        .addComponent(serv_name, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addComponent(message1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void services_cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_services_cmbActionPerformed

        String Y = services_cmb.getSelectedItem().toString();
        Y= getServices;

    }//GEN-LAST:event_services_cmbActionPerformed

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceActionPerformed

    private void priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyTyped

    }//GEN-LAST:event_priceKeyTyped

    private void serv_nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_serv_nameMouseClicked

    }//GEN-LAST:event_serv_nameMouseClicked

    private void serv_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serv_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serv_nameActionPerformed

    private void serv_nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serv_nameFocusGained
        if(serv_name.getText().equals("*Service Name")){
            serv_name.setText("");
            serv_name.setForeground(Color.BLACK);
        }else{

        }
    }//GEN-LAST:event_serv_nameFocusGained

    private void serv_nameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serv_nameFocusLost
        if(serv_name.getText().equals("")){
            serv_name.setText("*Service Name");
            serv_name.setForeground(new Color(51,102,0));
        }else{
        }
    }//GEN-LAST:event_serv_nameFocusLost

    private void stabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stabMouseClicked
        DefaultTableModel model=(DefaultTableModel) stab.getModel();
        services_cmb.setSelectedItem((String) model.getValueAt(stab.getSelectedRow(), 0));
        serv_name.setText((String) model.getValueAt(stab.getSelectedRow(), 1));
        price.setText((String) model.getValueAt(stab.getSelectedRow(), 2));

        getSrviceID();
        
        update.setEnabled(true);
        save.setEnabled(false);
    }//GEN-LAST:event_stabMouseClicked

    private void saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_saveMouseClicked

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        if(price.getText().equals("") || serv_name.getText().equals("*Service Name")){
            JOptionPane.showMessageDialog(rootPane, "Empty field(s) detected","Validation",JOptionPane.INFORMATION_MESSAGE);
        }else{
            save.setEnabled(true);
        update.setEnabled(false);

        String str = date.getText();
        String[] parts = str.split(" ");
        String p1 = parts[0]; // 004
        String p2 = parts[1]; // 034556
        String p3 = parts[2]; // 034556

        day = p1;
        month = p2;
        year = p3;

        message1.setText("");

        update.setEnabled(true);
        DefaultTableModel model=(DefaultTableModel) stab.getModel();
        model.addRow(new Object[] {services_cmb.getSelectedItem().toString(),serv_name.getText(), price.getText()});

        try{
            String oldpricedefault = "0";
            //            String defaultday = "0";
            //            String defaultmonth = " ";
            //            String defaultyear = "0";
            String sql2 = "insert into services_data (classification,name,prices,old_price, day_updated, month_updated, year_updated)values(?,?,?,?,?,?,?)";
            ps=conn_db.prepareStatement(sql2);

            ps.setString(1, services_cmb.getSelectedItem().toString());
            ps.setString(2, serv_name.getText());
            ps.setString(3, price.getText());
            ps.setString(4, oldpricedefault);
            ps.setString(5, day);
            ps.setString(6, month);
            ps.setString(7, year);

            ps.execute();

            JOptionPane.showMessageDialog(null, "Services Successfully Saved!");

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e) ;
        }

        //    }
        update.setEnabled(true);
        serv_name.setText("");
        price.setText("");
        services_cmb.setSelectedIndex(0);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseClicked

    }//GEN-LAST:event_updateMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed

        try{
            String sql="UPDATE services_data SET name=?, prices=?, classification=? where service_id= ? ";
            ps=conn_db.prepareStatement(sql);

            ps.setString(1, serv_name.getText());
            ps.setString(2, price.getText());
            ps.setString(3, services_cmb.getSelectedItem().toString());
            ps.setString(4, cid);

            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Services Successfully Updated!");

        }
        catch(Exception e){

            JOptionPane.showMessageDialog(null, e);
        }
        DefaultTableModel model=(DefaultTableModel) stab.getModel();
        model.setValueAt(services_cmb.getSelectedItem().toString(),stab.getSelectedRow(), 0);
        model.setValueAt(serv_name.getText(), stab.getSelectedRow(), 1);
        model.setValueAt(price.getText(), stab.getSelectedRow(), 2);

        serv_name.setText("");
        price.setText("");
        services_cmb.setSelectedIndex(0);
        
        update.setEnabled(false);
        save.setEnabled(true);
    }//GEN-LAST:event_updateActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        dispose();
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new services_classification_frame().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(services_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(services_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(services_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(services_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new services_frame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel date;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel message1;
    private javax.swing.JTextField price;
    private javax.swing.JButton save;
    private javax.swing.JTextField serv_name;
    private javax.swing.JComboBox services_cmb;
    private javax.swing.JTable stab;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
